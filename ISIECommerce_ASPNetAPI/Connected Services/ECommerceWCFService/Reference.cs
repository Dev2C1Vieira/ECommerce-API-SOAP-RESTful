//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECommerceWCFService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Category : object
    {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Costumer", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Costumer : object
    {
        
        private string AddressField;
        
        private string EmailField;
        
        private int IDField;
        
        private int NIFField;
        
        private string NameField;
        
        private int PhoneNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NIF
        {
            get
            {
                return this.NIFField;
            }
            set
            {
                this.NIFField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhoneNumber
        {
            get
            {
                return this.PhoneNumberField;
            }
            set
            {
                this.PhoneNumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Product : object
    {
        
        private int CategoryIDField;
        
        private string DescriptionField;
        
        private int IDField;
        
        private string NameField;
        
        private int StockField;
        
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID
        {
            get
            {
                return this.CategoryIDField;
            }
            set
            {
                this.CategoryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock
        {
            get
            {
                return this.StockField;
            }
            set
            {
                this.StockField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice
        {
            get
            {
                return this.UnitPriceField;
            }
            set
            {
                this.UnitPriceField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ECommerceWCFService.IECommerceService")]
    public interface IECommerceService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/GetAllCategories", ReplyAction="http://tempuri.org/IECommerceService/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ECommerceWCFService.Category>> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/GetCategoryById", ReplyAction="http://tempuri.org/IECommerceService/GetCategoryByIdResponse")]
        System.Threading.Tasks.Task<ECommerceWCFService.Category> GetCategoryByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/AddCategory", ReplyAction="http://tempuri.org/IECommerceService/AddCategoryResponse")]
        System.Threading.Tasks.Task<bool> AddCategoryAsync(ECommerceWCFService.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/UpdateCategory", ReplyAction="http://tempuri.org/IECommerceService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateCategoryAsync(ECommerceWCFService.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/DeleteCategory", ReplyAction="http://tempuri.org/IECommerceService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<bool> DeleteCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/GetAllClients", ReplyAction="http://tempuri.org/IECommerceService/GetAllClientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ECommerceWCFService.Costumer>> GetAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/GetCostumerById", ReplyAction="http://tempuri.org/IECommerceService/GetCostumerByIdResponse")]
        System.Threading.Tasks.Task<ECommerceWCFService.Costumer> GetCostumerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/AddCostumer", ReplyAction="http://tempuri.org/IECommerceService/AddCostumerResponse")]
        System.Threading.Tasks.Task<bool> AddCostumerAsync(ECommerceWCFService.Costumer costumer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/UpdateCostumer", ReplyAction="http://tempuri.org/IECommerceService/UpdateCostumerResponse")]
        System.Threading.Tasks.Task<bool> UpdateCostumerAsync(ECommerceWCFService.Costumer costumer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/DeleteCostumer", ReplyAction="http://tempuri.org/IECommerceService/DeleteCostumerResponse")]
        System.Threading.Tasks.Task<bool> DeleteCostumerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/GetAllProducts", ReplyAction="http://tempuri.org/IECommerceService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ECommerceWCFService.Product>> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/GetProductById", ReplyAction="http://tempuri.org/IECommerceService/GetProductByIdResponse")]
        System.Threading.Tasks.Task<ECommerceWCFService.Product> GetProductByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/AddProduct", ReplyAction="http://tempuri.org/IECommerceService/AddProductResponse")]
        System.Threading.Tasks.Task<bool> AddProductAsync(ECommerceWCFService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/UpdateProduct", ReplyAction="http://tempuri.org/IECommerceService/UpdateProductResponse")]
        System.Threading.Tasks.Task<bool> UpdateProductAsync(ECommerceWCFService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceService/DeleteProduct", ReplyAction="http://tempuri.org/IECommerceService/DeleteProductResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IECommerceServiceChannel : ECommerceWCFService.IECommerceService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class ECommerceServiceClient : System.ServiceModel.ClientBase<ECommerceWCFService.IECommerceService>, ECommerceWCFService.IECommerceService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ECommerceServiceClient() : 
                base(ECommerceServiceClient.GetDefaultBinding(), ECommerceServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IECommerceService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ECommerceServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ECommerceServiceClient.GetBindingForEndpoint(endpointConfiguration), ECommerceServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ECommerceServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ECommerceServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ECommerceServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ECommerceServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ECommerceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ECommerceWCFService.Category>> GetAllCategoriesAsync()
        {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public System.Threading.Tasks.Task<ECommerceWCFService.Category> GetCategoryByIdAsync(int id)
        {
            return base.Channel.GetCategoryByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AddCategoryAsync(ECommerceWCFService.Category category)
        {
            return base.Channel.AddCategoryAsync(category);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCategoryAsync(ECommerceWCFService.Category category)
        {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCategoryAsync(int id)
        {
            return base.Channel.DeleteCategoryAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ECommerceWCFService.Costumer>> GetAllClientsAsync()
        {
            return base.Channel.GetAllClientsAsync();
        }
        
        public System.Threading.Tasks.Task<ECommerceWCFService.Costumer> GetCostumerByIdAsync(int id)
        {
            return base.Channel.GetCostumerByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AddCostumerAsync(ECommerceWCFService.Costumer costumer)
        {
            return base.Channel.AddCostumerAsync(costumer);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCostumerAsync(ECommerceWCFService.Costumer costumer)
        {
            return base.Channel.UpdateCostumerAsync(costumer);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCostumerAsync(int id)
        {
            return base.Channel.DeleteCostumerAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ECommerceWCFService.Product>> GetAllProductsAsync()
        {
            return base.Channel.GetAllProductsAsync();
        }
        
        public System.Threading.Tasks.Task<ECommerceWCFService.Product> GetProductByIdAsync(int id)
        {
            return base.Channel.GetProductByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AddProductAsync(ECommerceWCFService.Product product)
        {
            return base.Channel.AddProductAsync(product);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProductAsync(ECommerceWCFService.Product product)
        {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductAsync(int id)
        {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IECommerceService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IECommerceService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:54890/Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ECommerceServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IECommerceService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ECommerceServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IECommerceService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IECommerceService,
        }
    }
}
